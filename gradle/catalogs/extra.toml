#### Gradle Library Catalog ####
# https://docs.gradle.org/current/userguide/platforms.html
# Third-party Libraries.
[versions]
accompanist = "0.31.5-beta"
coil = "2.4.0"
composesensors = "1.1.0"
compose-balloon = "1.5.4"
compose-colorpicker = "1.0.3"
compose-konfetti = "2.0.2"
compose-spinner = "1.2.0"
easydeviceinfo = "2.4.1" # https://github.com/nisrulz/easydeviceinfo
flow-bus = "1.1"
kotlin-pluralizer = "1.0.0"
guava = "31.1-jre"
landscapist = "2.2.2"
logger = "2.2.0"
jackson = "2.15.2"
jackson-module-kotlin = "2.15.2"
moshi = "1.15.0" # https://github.com/square/moshi
moshi-adapters = "1.15.0"
moshi-kotlin = "1.15.0"
moshi-kotlin-codegen = "1.15.0"
moshi-geojson = "1.0"
moshipack = "1.0.1" # https://github.com/davethomas11/MoshiPack
moshipack-retrofit = "1.0.1" # https://github.com/davethomas11/MoshiPack/tree/master/moshipack-retrofit
ok2curl = "0.8.0" # https://github.com/mrmike/Ok2Curl
retrofit = "2.9.0" # https://github.com/square/retrofit
retrofit-adapters = "1.0.6" # https://github.com/skydoves/retrofit-adapters
retrofit2-kotlinx-serialization-converter = "1.0.0"
sandwich = "1.3.7"
sqlcipher = "4.5.4"
selekt = "0.19.0"
spatialk = "0.2.0"
tink = "1.7.0"
whatif = "1.1.2"
only = "1.0.8"
qrcode-kotlin = "3.3.0"
kotlin-faker = "1.14.0"
bundler = "1.0.4"
treessence = "1.1.1"
timber = "5.0.1"
cloudy = "0.1.2"
okio = "3.4.0"

[libraries]
accompanist-adaptive = { module = "com.google.accompanist:accompanist-adaptive", version.ref = "accompanist" }
accompanist-drawablepainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-navigation-material = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-placeholder-material = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-testharness = { module = "com.google.accompanist:accompanist-testharness", version.ref = "accompanist" }
accompanist-themeadapter-appcompat = { module = "com.google.accompanist:accompanist-themeadapter-appcompat", version.ref = "accompanist" }
accompanist-themeadapter-core = { module = "com.google.accompanist:accompanist-themeadapter-core", version.ref = "accompanist" }
accompanist-themeadapter-material3 = { module = "com.google.accompanist:accompanist-themeadapter-material3", version.ref = "accompanist" }
accompanist-webview = { module = "com.google.accompanist:accompanist-webview", version.ref = "accompanist" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-gif = { module = "io.coil-kt:coil-gif", version.ref = "coil" }
coil-svg = { module = "io.coil-kt:coil-svg", version.ref = "coil" }
coil-video = { module = "io.coil-kt:coil-video", version.ref = "coil" }
compose-balloon = { module = "com.github.skydoves:balloon", version.ref = "compose-balloon" }
compose-colorpicker = { module = "com.github.skydoves:colorpicker-compose", version.ref = "compose-colorpicker" }
compose-spinner = { module = "com.github.skydoves:orchestra-spinner", version.ref = "compose-spinner" }
easydeviceinfo = { module = "com.github.nisrulz:easydeviceinfo", version.ref = "easydeviceinfo" }
flow-bus = { module = "com.github.Kosert.FlowBus:FlowBus", version.ref = "flow-bus" }
flow-bus-android = { module = "com.github.Kosert.FlowBus:FlowBus-android", version.ref = "flow-bus" }
landscapist = { module = "com.github.skydoves:landscapist", version.ref = "landscapist" }
landscapist-coil = { module = "com.github.skydoves:landscapist-coil", version.ref = "landscapist" }
landscapist-animation = { module = "com.github.skydoves:landscapist-animation", version.ref = "landscapist" }
landscapist-placeholder = { module = "com.github.skydoves:landscapist-placeholder", version.ref = "landscapist" }
landscapist-transformation = { module = "com.github.skydoves:landscapist-transformation", version.ref = "landscapist" }
landscapist-palette = { module = "com.github.skydoves:landscapist-palette", version.ref = "landscapist" }
logger = { module = "com.orhanobut:logger", version.ref = "logger" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
kotlin-pluralizer = { module = "com.github.cesarferreira:kotlin-pluralizer", version.ref = "kotlin-pluralizer" }
jackson = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson-module-kotlin" }
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi-adapters" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi-kotlin" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi-kotlin-codegen" }
moshi-geojson = { module = "dev.haeusler.geojson-kotlin:geojson-moshi", version.ref = "moshi-geojson" }
moshipack = { module = "com.daveanthonythomas.moshipack:moshipack", version.ref = "moshipack" }
moshipack-retrofit = { module = "com.daveanthonythomas.moshipack:moshipack-retrofit", version.ref = "moshipack-retrofit" }
ok2curl = { module = "com.github.mrmike:ok2curl", version.ref = "ok2curl" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-adapter-arrow = { module = "com.github.skydoves:retrofit-adapters-arrow", version.ref = "retrofit-adapters" }
retrofit-adapter-result = { module = "com.github.skydoves:retrofit-adapters-result", version.ref = "retrofit-adapters" }
retrofit-adapter-paging = { module = "com.github.skydoves:retrofit-adapters-paging", version.ref = "retrofit-adapters" }
retrofit-adapter-serialization = { module = "com.github.skydoves:retrofit-adapters-serialization", version.ref = "retrofit-adapters" }
retrofit-adapter-guava = { module = "com.squareup.retrofit2:adapter-guava", version.ref = "retrofit" }
retrofit-adapter-java8 = { module = "com.squareup.retrofit2:adapter-java8", version.ref = "retrofit" }
retrofit-adapter-rxjava2 = { module = "com.squareup.retrofit2:adapter-rxjava2", version.ref = "retrofit" }
retrofit-adapter-rxjava3 = { module = "com.squareup.retrofit2:adapter-rxjava3", version.ref = "retrofit" }
retrofit-adapter-scala = { module = "com.squareup.retrofit2:adapter-scala", version.ref = "retrofit" }
retrofit-converter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }
retrofit-converter-guava = { module = "com.squareup.retrofit2:converter-guava", version.ref = "retrofit" }
retrofit-converter-jackson = { module = "com.squareup.retrofit2:converter-jackson", version.ref = "retrofit" }
retrofit-converter-java8 = { module = "com.squareup.retrofit2:converter-java8", version.ref = "retrofit" }
retrofit-converter-jaxb = { module = "com.squareup.retrofit2:converter-jaxb", version.ref = "retrofit" }
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }
retrofit-converter-protobuf = { module = "com.squareup.retrofit2:converter-protobuf", version.ref = "retrofit" }
retrofit-converter-scalars = { module = "com.squareup.retrofit2:converter-scalars", version.ref = "retrofit" }
retrofit-converter-simplexml = { module = "com.squareup.retrofit2:converter-simplexml", version.ref = "retrofit" }
retrofit-converter-wire = { module = "com.squareup.retrofit2:converter-wire", version.ref = "retrofit" }
retrofit-mock = { module = "com.squareup.retrofit2:retrofit-mock", version.ref = "retrofit" }
retrofit2-kotlinx-serialization-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "retrofit2-kotlinx-serialization-converter" }
sandwich = { module = "com.github.skydoves:sandwich", version.ref = "sandwich" }
sqlcipher = { module = "net.zetetic:android-database-sqlcipher", version.ref = "sqlcipher" }
selekt = { module = "com.bloomberg:selekt-android", version.ref = "selekt" }
spatialk-geojson = { module = "io.github.dellisd.spatialk:geojson", version.ref = "spatialk" }
spatialk-turf = { module = "io.github.dellisd.spatialk:turf", version.ref = "spatialk" }
tink = { module = "com.google.crypto.tink:tink-android", version.ref = "tink" }
whatif = { module = "com.github.skydoves:whatif", version.ref = "whatif" }
only = { module = "com.github.skydoves:only", version.ref = "only" }
qrcode-kotlin = { module = "io.github.g0dkar:qrcode-kotlin-android", version.ref = "qrcode-kotlin" }
kotlin-faker = { module = "io.github.serpro69:kotlin-faker", version.ref = "kotlin-faker" }
bundler = { module = "com.github.skydoves:bundler", version.ref = "bundler" }
treessence = { module = "com.github.bastienpaulfr:Treessence", version.ref = "treessence" }
composesensors = { module = "com.mutualmobile:composesensors", version.ref = "composesensors" }
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
compose-konfetti = { module = "nl.dionsegijn:konfetti-compose", version.ref = "compose-konfetti" }
cloudy = { module = "com.github.skydoves:cloudy", version.ref = "cloudy" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }

[bundles]
accompanist = [
    "accompanist-adaptive",
    "accompanist-drawablepainter",
    "accompanist-navigation-material",
    "accompanist-permissions",
    "accompanist-placeholder-material",
    "accompanist-systemuicontroller",
    "accompanist-testharness",
    "accompanist-themeadapter-appcompat",
    "accompanist-themeadapter-core",
    "accompanist-themeadapter-material3",
    "accompanist-webview",
]
coil = [
    "coil",
    "coil-compose",
    "coil-gif",
    "coil-svg",
    "coil-video"
]
compose = [
    "composesensors",
    "compose-konfetti",
    "compose-colorpicker",
    "cloudy"
]
database = [
    "sqlcipher",
    "selekt",
]
geographic = [
    "spatialk-geojson",
    "spatialk-turf",
]
landscapist = [
    "landscapist",
    "landscapist-coil",
    "landscapist-animation",
    "landscapist-placeholder",
    "landscapist-transformation",
    "landscapist-palette",
]
logging = [
    "logger",
    "timber",
]
moshi = [
    "moshi",
    "moshi-adapters",
    "moshi-kotlin",
    "moshi-kotlin-codegen",
    "moshi-geojson",
]
moshipack = [
    "moshipack",
    "moshipack-retrofit",
]
retrofit = [
    "retrofit",
    "retrofit-adapter-arrow",
    "retrofit-adapter-result",
    "retrofit-adapter-paging",
    "retrofit-adapter-serialization",
    "retrofit-adapter-guava",
    "retrofit-adapter-java8",
    "retrofit-adapter-rxjava2",
    "retrofit-adapter-rxjava3",
    "retrofit-adapter-scala",
    "retrofit-converter-gson",
    "retrofit-converter-guava",
    "retrofit-converter-jackson",
    "retrofit-converter-java8",
    "retrofit-converter-jaxb",
    "retrofit-mock",
    "retrofit-converter-moshi",
    "retrofit-converter-protobuf",
    "retrofit-converter-scalars",
    "retrofit-converter-simplexml",
    "retrofit-converter-wire",
    "retrofit2-kotlinx-serialization-converter",
]
security = [
    "tink",
]
utils = [
    "easydeviceinfo",
    "flow-bus",
    "flow-bus-android",
    "kotlin-pluralizer",
    "guava",
    "jackson",
    "jackson-module-kotlin",
    "sandwich",
    "whatif",
    "only",
    "qrcode-kotlin",
    "kotlin-faker",
    "bundler",
    "treessence",
    "okio",
]
diagnostics = [
    "ok2curl",
]